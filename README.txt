Вариант задания:
   I.1. Один клиент. Клиент и сервер на одной ЭВМ.
  II.1. Клиент получает от пользователя запрос на модельном SQL и, не анализируя
        его, передает серверу. Сервер анализирует запрос и в случае его
        корректности выполняет запрос и передает клиенту ответ. Если же запрос
        некорректен, сервер передает клиенту сообщение об ошибке. Клиент выдает
        пользователю либо ответ на его запрос, либо сообщение об ошибке.

Программы и библиотеки:
    1.  Client.cpp   -   реализация клиентской программы
    2.  dbms.h       -   модуль управления базами данных
    3.  Server.cpp   -   реализация серверной программы
    4.  sock_wrap.h  -   модуль с функциями для использования сокетов
    5.  sql.h        -   модуль для итрепретации команд SQL

Клиент-Сервер:
    Клиент передаёт Серверу строки-команды на языке SQL для работы с базами
    данных. Сервер принимает их и обрабатывает. После чего на эране Клиента
    появляется ответ: или "OK", или сообщение об ошибке. Чтобы завершить работу
    с Сервером, Клиенту необходимо ввести "END". Таким образом, Клиент и Сервер
    завершают свою работу.
    Чтобы Клиент мог не только получить ответ "OK", но и посмотреть результат
    работы Сервера, в начале связи предлагается ввести имя текстового файла,
    куда можно будет вывести таблицу. Его имя нужно вводить вместе с
    расширением. В случае отсутствия такого файла, он создаётся, иначе -
    перезаписывается.
    Все основные действия, например, создание сокета, связывание, подключение
    и т.д., описаны в модуле sock_wrap.h, который подключен к обеим программам.

СУБД:
    Все действия с таблицами совершаются через бинарные файлы, в которых 
    хранятся базы данных.
    Основные действия:
        - создание новой таблицы
        - удаление существующей таблицы
        - открытие существующей таблицы
        - добавление новых записей
        - редактирование существующих записей
        - поиск номеры записи с соответствующими данными
        - удаление существующей записи
        - перемещение по таблице (чтение первой записи, следующей, предыдущей,
          записи с определённым номером)
        - вывод на экран (названий полей, значений полей, полной таблицы,
          укороченных строк)
    В случае ошибочных команд, неудачных команд, например, при работе с файлом,
    генерируются исключительные ситуации.
    Максимальные размеры полей и названий указаны в начале dbms.h 

SQL-интерпретатор:
    Требования к командам:
    Запрос должен передаваться за одну строку, чтобы он был правильно обработан.
    Слова и служебные символы, кроме апострофов ' у строк, должны отделяться
    пробелами (любым количеством),т.е., например, так:
        INSERT INTO <table> ( <number> , '<string>' )
        DELETE  FROM   <table> WHERE ( <long name> = <number>   )
        CREATE TABLE <table> ( <text name> TEXT ( 10 ) )
    Имена таблиц:
    Нельзя называть базы данных только цифрами, а также служебными словами, 
    так как они указываются без кавычек. Это может привести к ошибкам в
    ратоте некоторых команд.
